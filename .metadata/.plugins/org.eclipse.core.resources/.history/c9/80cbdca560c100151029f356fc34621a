package robot.states;

import java.util.ArrayList;
import java.util.List;

import robot.MyRobotLego;
import robot.RobotNervousSystem;

public abstract class Scanner extends Thread {
	public final static int DEFAULT_DELAY = 500;
	
	protected List<RobotNervousSystem> listeners = new ArrayList<RobotNervousSystem>();
	protected final MyRobotLego robot;
	protected final int id;
	
	protected boolean active = true;
	protected int delay = DEFAULT_DELAY;
	
	public int getDelay() { return this.delay; }
	
	public void setDelay(int delay) { this.delay = delay; }
	
	public boolean isActive() { return this.active; }
	
	public void deactivate() { this.active = false; }
	
	protected abstract void objectDetected(int distance);
	protected abstract void objectIsGone();
	protected abstract void setPort(int port);
	public abstract int scan();
	
	public Scanner(MyRobotLego robot, int id, int port) {
		this.robot = robot;
		this.id = id;
		setPort(port);
		this.port = port;
		this.addListener(robot);
		this.start();
	}
	public void run() {		
		if(!active) this.interrupt();
	}
}

interface RobotNervousSystem {
	void ObjectDetected(ActiveState state);
	void ObjectIsGone();
}
