package robot.states;

import robot.MyRobotLego;

public class BackScanner extends Scanner {
	public static final int ID = 1;
	
	private MyRobotLego robot;
	private int[] trigger = new int[2];
	private int objectDistance = 0;

	public BackScanner(StateMachine machine, int id, int port) {
		super(machine, id, port);
	}

	@Override
	protected void objectDetected() {
		objectDetected = true;
		for(RobotNervousSystem listener : listeners)  listener.ObjectDetected(new Escape(trigger));	
	}

	@Override
	protected void objectIsGone() {
		objectDetected = false;
		for(RobotNervousSystem listener : listeners)  listener.ObjectIsGone();	
	}

	@Override
	protected void setPort(int port) { robot.SetSensorLowspeed(port); }

	@Override
	public int scan() { return robot.SensorUS(port); }
	
	@Override
	public void run() { 
		while(active) {
			objectDistance = scan();
			
			if(!objectDetected && (objectDistance > trigger[0] && objectDistance < trigger[1])) {
				objectDetected();
			}
			
				
			try { Thread.sleep(delay); } 
			catch (InterruptedException e) { }
		}
	}

}
